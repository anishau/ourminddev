---
layout: base.njk
title: Reset Password
---

<div class="auth-form">
  <h2>Set New Password</h2>
  <form id="newPasswordForm">
    <div class="form-group">
      <label for="newPassword">New Password</label>
      <input type="password" id="newPassword" name="password" required>
    </div>
    <button type="submit">Update Password</button>
  </form>
</div>

<script>
document.getElementById('newPasswordForm').addEventListener('submit', async (e) => {
  e.preventDefault()
  const newPassword = document.getElementById('newPassword').value

  try {
    // First check if we have the access token from the reset link
    const { data: { session }, error: sessionError } = await supabase.auth.getSession()
    if (!session) {
      throw new Error('No valid session. Please use the reset link from your email.')
    }

    const { data: { user }, error } = await supabase.auth.updateUser({
      password: newPassword
    })

    if (error) throw error

    alert('Password updated successfully')
    await supabase.auth.signOut()
    window.location.href = '/auth/sign-in'
  } catch (error) {
    console.error('Error updating password:', error.message)
    alert('Error updating password. Please make sure you clicked the reset link from your email and try again.')
  }
})

// Debug helper
window.addEventListener('load', async () => {
  const { data: { session }, error } = await supabase.auth.getSession()
  console.log('Current session:', session, 'Error:', error)
})
</script> 